import React from 'react';
import ReactDOM from 'react-dom';
{{#if isReduxActive}}
import { Provider } from 'react-redux';
{{/if}}
import { render, cleanup } from 'react-testing-library';
{{#if isReduxActive}}
import store from '../../../../store/__mocks__/mockStore';

import { {{{actionsForComponent}}} } from {{{actionsRoute}}}

import { {{{selectorsForComponent}}} } from {{{selectorsRoute}}}

{{/if}}

import {{name}} from '../{{name}}';

{{#if isReduxActive}}
jest.mock({{{actionsRoute}}})
jest.mock({{{selectorsRoute}}})
{{/if}}


describe('{{name}} test suite', () => {
  {{#if isReduxActive}}
  const component = (
    <Provider store={store}>
      <{{name}}/>
    </Provider>
  );
  {{else}}
    const component = <{{name}}/>
  {{/if}}

  const setup = () => render(component);

  {{#if isReduxActive}}
    beforeEach(() => {
        {{#each actionsArray}}
            {{this}}.mockReturnValue({
                type:'{{{this}}}'
            })
        {{/each}}
        {{#each selectorsArray}}
            {{this}}.mockReturnValue(null)
        {{/each}}
    });
    afterEach(() => {
        jest.clearAllMocks();
        cleanup();
    });
  {{/if}}

it('Should render correctly', () => {
    const div = document.createElement('div');
    ReactDOM.render(component, div);
    ReactDOM.unmountComponentAtNode(div);
  });

  it('Should match snapshot', () => {
    const { container } = setup();
    expect(container).toMatchSnapshot();
  });
});
